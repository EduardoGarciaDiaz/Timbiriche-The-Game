//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimbiricheViews.Server {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/TimbiricheService")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimbiricheViews.Server.Account AccountFKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimbiricheViews.Server.Account AccountFK {
            get {
                return this.AccountFKField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountFKField, value) != true)) {
                    this.AccountFKField = value;
                    this.RaisePropertyChanged("AccountFK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Coins {
            get {
                return this.CoinsField;
            }
            set {
                if ((this.CoinsField.Equals(value) != true)) {
                    this.CoinsField = value;
                    this.RaisePropertyChanged("Coins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPlayer {
            get {
                return this.IdPlayerField;
            }
            set {
                if ((this.IdPlayerField.Equals(value) != true)) {
                    this.IdPlayerField = value;
                    this.RaisePropertyChanged("IdPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salt {
            get {
                return this.SaltField;
            }
            set {
                if ((object.ReferenceEquals(this.SaltField, value) != true)) {
                    this.SaltField = value;
                    this.RaisePropertyChanged("Salt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/TimbiricheService")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdAcccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Birthdate {
            get {
                return this.BirthdateField;
            }
            set {
                if ((this.BirthdateField.Equals(value) != true)) {
                    this.BirthdateField = value;
                    this.RaisePropertyChanged("Birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAcccount {
            get {
                return this.IdAcccountField;
            }
            set {
                if ((this.IdAcccountField.Equals(value) != true)) {
                    this.IdAcccountField = value;
                    this.RaisePropertyChanged("IdAcccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Server.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/AddUser", ReplyAction="http://tempuri.org/IUserManager/AddUserResponse")]
        int AddUser(TimbiricheViews.Server.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/AddUser", ReplyAction="http://tempuri.org/IUserManager/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(TimbiricheViews.Server.Player player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ValidateLoginCredentials", ReplyAction="http://tempuri.org/IUserManager/ValidateLoginCredentialsResponse")]
        TimbiricheViews.Server.Player ValidateLoginCredentials(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ValidateLoginCredentials", ReplyAction="http://tempuri.org/IUserManager/ValidateLoginCredentialsResponse")]
        System.Threading.Tasks.Task<TimbiricheViews.Server.Player> ValidateLoginCredentialsAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ValidateUniqueIdentifierUser", ReplyAction="http://tempuri.org/IUserManager/ValidateUniqueIdentifierUserResponse")]
        bool ValidateUniqueIdentifierUser(string identifier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/ValidateUniqueIdentifierUser", ReplyAction="http://tempuri.org/IUserManager/ValidateUniqueIdentifierUserResponse")]
        System.Threading.Tasks.Task<bool> ValidateUniqueIdentifierUserAsync(string identifier);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : TimbiricheViews.Server.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<TimbiricheViews.Server.IUserManager>, TimbiricheViews.Server.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddUser(TimbiricheViews.Server.Player player) {
            return base.Channel.AddUser(player);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(TimbiricheViews.Server.Player player) {
            return base.Channel.AddUserAsync(player);
        }
        
        public TimbiricheViews.Server.Player ValidateLoginCredentials(string username, string password) {
            return base.Channel.ValidateLoginCredentials(username, password);
        }
        
        public System.Threading.Tasks.Task<TimbiricheViews.Server.Player> ValidateLoginCredentialsAsync(string username, string password) {
            return base.Channel.ValidateLoginCredentialsAsync(username, password);
        }
        
        public bool ValidateUniqueIdentifierUser(string identifier) {
            return base.Channel.ValidateUniqueIdentifierUser(identifier);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUniqueIdentifierUserAsync(string identifier) {
            return base.Channel.ValidateUniqueIdentifierUserAsync(identifier);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Server.IOnlineUsersManager", CallbackContract=typeof(TimbiricheViews.Server.IOnlineUsersManagerCallback))]
    public interface IOnlineUsersManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOnlineUsersManager/RegisterUserToOnlineUsers")]
        void RegisterUserToOnlineUsers(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOnlineUsersManager/RegisterUserToOnlineUsers")]
        System.Threading.Tasks.Task RegisterUserToOnlineUsersAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOnlineUsersManager/UnregisterUserToOnlineUsers")]
        void UnregisterUserToOnlineUsers(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOnlineUsersManager/UnregisterUserToOnlineUsers")]
        System.Threading.Tasks.Task UnregisterUserToOnlineUsersAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOnlineUsersManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineUsersManager/NotifyUserLoggedIn", ReplyAction="http://tempuri.org/IOnlineUsersManager/NotifyUserLoggedInResponse")]
        void NotifyUserLoggedIn(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineUsersManager/NotifyUserLoggedOut", ReplyAction="http://tempuri.org/IOnlineUsersManager/NotifyUserLoggedOutResponse")]
        void NotifyUserLoggedOut(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnlineUsersManager/NotifyOnlineUsers", ReplyAction="http://tempuri.org/IOnlineUsersManager/NotifyOnlineUsersResponse")]
        void NotifyOnlineUsers(string[] onlineUsernames);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOnlineUsersManagerChannel : TimbiricheViews.Server.IOnlineUsersManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OnlineUsersManagerClient : System.ServiceModel.DuplexClientBase<TimbiricheViews.Server.IOnlineUsersManager>, TimbiricheViews.Server.IOnlineUsersManager {
        
        public OnlineUsersManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public OnlineUsersManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public OnlineUsersManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public OnlineUsersManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public OnlineUsersManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegisterUserToOnlineUsers(string username) {
            base.Channel.RegisterUserToOnlineUsers(username);
        }
        
        public System.Threading.Tasks.Task RegisterUserToOnlineUsersAsync(string username) {
            return base.Channel.RegisterUserToOnlineUsersAsync(username);
        }
        
        public void UnregisterUserToOnlineUsers(string username) {
            base.Channel.UnregisterUserToOnlineUsers(username);
        }
        
        public System.Threading.Tasks.Task UnregisterUserToOnlineUsersAsync(string username) {
            return base.Channel.UnregisterUserToOnlineUsersAsync(username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Server.IEmailManager")]
    public interface IEmailManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailManager/sendEmail", ReplyAction="http://tempuri.org/IEmailManager/sendEmailResponse")]
        string sendEmail(string addresseeEmail, string subjectEmail, string bodyEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailManager/sendEmail", ReplyAction="http://tempuri.org/IEmailManager/sendEmailResponse")]
        System.Threading.Tasks.Task<string> sendEmailAsync(string addresseeEmail, string subjectEmail, string bodyEmail);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailManagerChannel : TimbiricheViews.Server.IEmailManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailManagerClient : System.ServiceModel.ClientBase<TimbiricheViews.Server.IEmailManager>, TimbiricheViews.Server.IEmailManager {
        
        public EmailManagerClient() {
        }
        
        public EmailManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string sendEmail(string addresseeEmail, string subjectEmail, string bodyEmail) {
            return base.Channel.sendEmail(addresseeEmail, subjectEmail, bodyEmail);
        }
        
        public System.Threading.Tasks.Task<string> sendEmailAsync(string addresseeEmail, string subjectEmail, string bodyEmail) {
            return base.Channel.sendEmailAsync(addresseeEmail, subjectEmail, bodyEmail);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Server.IPasswordReset")]
    public interface IPasswordReset {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordReset/SendResetToken", ReplyAction="http://tempuri.org/IPasswordReset/SendResetTokenResponse")]
        bool SendResetToken(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordReset/SendResetToken", ReplyAction="http://tempuri.org/IPasswordReset/SendResetTokenResponse")]
        System.Threading.Tasks.Task<bool> SendResetTokenAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordReset/ValidateResetToken", ReplyAction="http://tempuri.org/IPasswordReset/ValidateResetTokenResponse")]
        bool ValidateResetToken(string email, int token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordReset/ValidateResetToken", ReplyAction="http://tempuri.org/IPasswordReset/ValidateResetTokenResponse")]
        System.Threading.Tasks.Task<bool> ValidateResetTokenAsync(string email, int token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPasswordResetChannel : TimbiricheViews.Server.IPasswordReset, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PasswordResetClient : System.ServiceModel.ClientBase<TimbiricheViews.Server.IPasswordReset>, TimbiricheViews.Server.IPasswordReset {
        
        public PasswordResetClient() {
        }
        
        public PasswordResetClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PasswordResetClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PasswordResetClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PasswordResetClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SendResetToken(string email) {
            return base.Channel.SendResetToken(email);
        }
        
        public System.Threading.Tasks.Task<bool> SendResetTokenAsync(string email) {
            return base.Channel.SendResetTokenAsync(email);
        }
        
        public bool ValidateResetToken(string email, int token) {
            return base.Channel.ValidateResetToken(email, token);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateResetTokenAsync(string email, int token) {
            return base.Channel.ValidateResetTokenAsync(email, token);
        }
    }
}
